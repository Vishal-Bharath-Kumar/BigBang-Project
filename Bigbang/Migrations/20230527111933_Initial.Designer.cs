// <auto-generated />
using System;
using Bigbang.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bigbang.Migrations
{
    [DbContext(typeof(BigbangDbContext))]
    [Migration("20230527111933_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bigbang.Models.Booking_Details", b =>
                {
                    b.Property<int>("Booking_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Booking_Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Checkout")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Booking_Id");

                    b.ToTable("Booking_Details");
                });

            modelBuilder.Entity("Bigbang.Models.Hotel", b =>
                {
                    b.Property<int>("HotelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HotelId"));

                    b.Property<int?>("Booking_DetailsBooking_Id")
                        .HasColumnType("int");

                    b.Property<string>("Hotel_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hotel_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.HasKey("HotelId");

                    b.HasIndex("Booking_DetailsBooking_Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Bigbang.Models.LogIn", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<int?>("Booking_DetailsBooking_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("Booking_DetailsBooking_Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Bigbang.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int?>("Booking_DetailsBooking_Id")
                        .HasColumnType("int");

                    b.Property<int>("HotelId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomId");

                    b.HasIndex("Booking_DetailsBooking_Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Bigbang.Models.Hotel", b =>
                {
                    b.HasOne("Bigbang.Models.Booking_Details", null)
                        .WithMany("Hotel")
                        .HasForeignKey("Booking_DetailsBooking_Id");
                });

            modelBuilder.Entity("Bigbang.Models.LogIn", b =>
                {
                    b.HasOne("Bigbang.Models.Booking_Details", null)
                        .WithMany("LogIn")
                        .HasForeignKey("Booking_DetailsBooking_Id");
                });

            modelBuilder.Entity("Bigbang.Models.Room", b =>
                {
                    b.HasOne("Bigbang.Models.Booking_Details", null)
                        .WithMany("Room")
                        .HasForeignKey("Booking_DetailsBooking_Id");

                    b.HasOne("Bigbang.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Bigbang.Models.Booking_Details", b =>
                {
                    b.Navigation("Hotel");

                    b.Navigation("LogIn");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Bigbang.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
